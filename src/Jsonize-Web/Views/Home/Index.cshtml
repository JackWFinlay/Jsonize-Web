@{
    ViewData["Title"] = "Jsonize";
}
@model Jsonize_Web.Models.ApiModel

<div id="top" class=""></div>
<!-- nav -->
<nav class="nav" id="nav">
    <div class="inner-nav">
        <div class="hamburger" id="hamburger">≡</div>
        <ul id="menu">
            <li><a href="#top" class="title anchor">Jsonize</a></li>
            <li><a href="#about" class="anchor">about</a></li>
            <li><a href="#tryit" class="anchor">try it</a></li>
            <li><a href="#usage" class="anchor">usage</a></li>
            <li><a href="#project" class="anchor">project</a></li>
            <li><a href="#contact" class="anchor">contact</a></li>
        </ul>
    </div>
</nav>
<div class="nav-spacer"></div>
<!-- /nav -->
<!-- about -->
<section class="row container">
    
    <div class="inner-row">
        <div id="about" class="anchor-spacer"></div>
        <h1>Jsonize</h1>
        <h2>Convert HTML to JSON</h2>

        <div id="tryit" class="anchor-spacer"></div>
        <p>Enter a URL of a page to convert to JSON. Requires <span class="code">http://</span> or <span class="code">https://</span> prefix.</p>
        @using (Html.BeginForm("convert", "api", FormMethod.Get, new { }))
        {   
            @Html.HiddenFor(m => m.Format, new { id = "format", Value = "string"})
            @Html.TextBoxFor(m => m.Url, new { @class = "search", id = "search-box"})
            
            <a id="submit" class="button">Go!</a>
            @Html.ValidationMessageFor(m => m.Url)
            <div>
                <p class = "config-toggle">Empty Text Node Handling:</p>
                @Html.RadioButton("emptyTextNodeHandling", "ignore", true, new { id = "emptyTextNodeHandlingIgnore" })@Html.Label("emptyTextNodeHandlingIgnore", "Ignore")
                @Html.RadioButton("emptyTextNodeHandling", "include", false, new { id = "emptyTextNodeHandlingInclude" })@Html.Label("emptyTextNodeHandlingInclude", "Include")
            </div>
            <div>
                <p class = "config-toggle">Null Value Handling:</p>
                @Html.RadioButton("nullValueHandling", "include", true, new { id = "nullValueHandlingIgnore" })@Html.Label("nullValueHandlingIgnore", "Ignore")
                @Html.RadioButton("nullValueHandling", "ignore", false, new { id = "nullValueHandlingInclude" })@Html.Label("nullValueHandlingInclude", "Include")
            </div>
            <div>
                <p class = "config-toggle">Text Trim Handling:</p>
                @Html.RadioButton("textTrimHandling", "trim", true, new { id = "textTrimHandlingTrim" })@Html.Label("textTrimHandlingTrim", "Trim")
                @Html.RadioButton("textTrimHandling", "include", false, new { id = "textTrimHandlingInclude" })@Html.Label("textTrimHandlingInclude", "Include")
            </div>
            <div>
                <p class ="config-toggle">Attribute Handling:</p>
                @Html.RadioButton("classAttributeHandling", "array", true, new { id = "classAttributeHandlingArray" })@Html.Label("classAttributeHandlingArray", "Array")
                @Html.RadioButton("classAttributeHandling", "string", false, new { id = "classAttributeHandlingString" })@Html.Label("classAttributeHandlingString", "String")
            </div>
        }

        @Html.TextArea("result", new { @class = "search text-area", disabled = "disabled"})


        <br />
        <div id="usage" class="anchor-spacer"></div>
        <h1>Usage</h1>
        <p>To use the Jsonize API, use the endpoint 
            <span class="code">http://jsonize.co/api/convert</span>, 
            use the id <span class="code">url</span> for the query url. The following are settings available to the consumer(defaults in bold):
            <ul>
                <li><span class="code">format</span>: <span class="code"><strong>json</strong></span> or <span class="code">string</span></li>
                <li><span class = "code">emptyTextNodeHandling</span>: <span class="code"><strong>include</strong></span> or <span class ="code">ignore</span></li>
                <li><span class = "code">nullValueHandling</span>: <span class="code"><strong>include</strong></span> or <span class="code">ignore</span></li>
                <li><span class = "code">textTrimHandling </span>: <span class="code"><strong>trim</strong></span> or <span class="code">include</span></li>
                <li><span class = "code">classAttributeHandling</span>: <span class="code"><strong>array</strong></span> or <span class="code">string</span></li>
            </ul>
        </p>
        <p>E.g. <span class="code">http://jsonize.co/api/convert?url=http%3A%2F%2Fjsonize.co&format=json&emptyTextNodeHandling=ignore&nullValueHandling=ignore&textTrimHandling=trim&classAttributeHandling=array</span></p>

        <br />
        <div id="project" class="anchor-spacer"></div>
        <h1>Github Project</h1>
        <p>The project is available at</p>
        <a href="https://github.com/JackWFinlay/jsonize" class="button">Github</a> 
        <a href="https://www.nuget.org/packages/JackWFinlay.Jsonize/" class="button">NuGet</a>
        <br />
        <br />
        <div id="contact" class="anchor-spacer"></div>
        <h1>Contact</h1>
        <a class="button" href="mailto:jack@jackfinlay.com">email me</a>
    </div> 
</section>
<!-- /about -->

